I. AWS Database Service
----------------------------------------------------------------------------------------------------------------------------------------
1. Amazon Relational Database Service (RDS)
-----------------------------------------------------------------
*** Like RDBMS

• RDS là một dịch vụ, nó cho phép dễ dàng trong việc tạo, cài đặt & quản lý các hệ CSDL quan hệ
- Hỗ trợ các hệ CSDL phổ biến
- Nó cung cấp tính sẵn sàng cao (high availability) và tỉnh chịu lỗi (fault tolerance) sử dụng tùy chọn trong triển khai Multi-AZ
- AWS quản lý CSDL trong việc tự động cài đặt các bản vá lỗi, tự động backup, bảo trì hệ điều hành, VV..
- Có thể tạo nhiều CSDL đọc giống nhau (read replicas) giữa các Regions để cung cấp Khả năng gia tăng hiệu xuất và tính bền vững

Amazon RDS Overview
• RDS stands for Relational Database Service
• It’s a managed DB service for DB use SQL as a query language.
• It allows you to create databases in the cloud that are managed by AWS
	• Postgres
	• MySQL
	• MariaDB
	• Oracle
	• Microsoft SQL Server
	• IBM DB2
	• Aurora (AWS Proprietary database)


Advantage over using RDS versus deploying DB on EC2
• RDS is a managed service:
	• Automated provisioning, OS patching
	• Continuous backups and restore to specific timestamp (Point in Time Restore)!
	• Monitoring dashboards
	• Read replicas for improved read performance
	• Multi AZ setup for DR (Disaster Recovery)
	• Maintenance windows for upgrades
	• Scaling capability (vertical and horizontal)
	• Storage backed by EBS
• BUT can’t SSH into your instances


RDS – Storage Auto Scaling
• Helps you increase storage on your RDS DB instance dynamically
• When RDS detects you are running out of free database storage, it scales automatically
• Avoid manually scaling your database storage
• You have to set Maximum Storage Threshold (maximum limit for DB storage)
• Automatically modify storage if:
	• Free storage is less than 10% of allocated storage
	• Low-storage lasts at least 5 minutes
	• 6 hours have passed since last modification
	• Useful for applications with unpredictable workloads
• Supports all RDS database engines


RDS Read Replicas for read scalability
• ASYNC replication: Up to 15 Read Replicas
• Within AZ, Cross AZ or Cross Region
	• In AWS there’s a network cost when data goes from one AZ to another
	• Free for same region
	• Not free for cross region
• Replication is ASYNC, so reads are eventually consistent
• Replicas can be promoted to their own DB
• Applications must update the connection string to leverage read replicas
• Use Cases:
	• You have a production database that is taking on normal load
	• You want to run a reporting application to run some analytics
	• You create a Read Replica to run the new workload there
	• The production application is unaffected
	• Read replicas are used for SELECT (=read) only kind of statements not INSERT, UPDATE, DELETE)


RDS Multi AZ (Disaster Recovery)
• SYNC replication
• One DNS name – automatic app failover to standby
• Increase availability
• Failover in case of loss of AZ, loss of network, instance or storage failure
• No manual intervention in apps
• Not used for scaling
• Note:The Read Replicas be setup as Multi AZ for Disaster Recovery (DR)


RDS – From Single-AZ to Multi-AZ
• Zero downtime operation (no need to stop the DB)
• Just click on “modify” for the database
• The following happens internally:
• A snapshot is taken
• A new DB is restored from the snapshot in a new AZ
• Synchronization is established between the two databases


RDS Custom
• Managed Oracle and Microsoft SQL Server Database with OS and database customization
• RDS: Automates setup, operation, and scaling of database in AWS
• Custom: access to the underlying database and OS so you can
	• Configure settings
	• Install patches
	• Enable native features
	• Access the underlying EC2 Instance using SSH or SSM Session Manager
• De-activate Automation Mode to perform your customization, better to take a DB snapshot before
• RDS vs. RDS Custom
	• RDS: entire database and the OS to be managed by AWS
	• RDS Custom: full admin access to the underlying OS and the database

RDS Backups
• Automated backups:
	• Daily full backup of the database (during the backup window)
	• Transaction logs are backed-up by RDS every 5 minutes
	• => ability to restore to any point in time (from oldest backup to 5 minutes ago)
	• 1 to 35 days of retention, set 0 to disable automated backups
• Manual DB Snapshots
	• Manually triggered by the user
	• Retention of backup for as long as you want
• Recommend: in a stopped RDS database, you will still pay for storage. If you plan on stopping it for a long time, you should snapshot & restore instead


RDS & Aurora Restore options
• Restoring a RDS / Aurora backup or a snapshot creates a new database
• Restoring MySQL RDS database from S3
	• Create a backup of your on-premises database
	• Store it on Amazon S3 (object storage)
	• Restore the backup file onto a new RDS instance running MySQL
	
	
Amazon RDS Proxy
• Fully managed database proxy for RDS
• Allows apps to pool and share DB connections established with the database
• Improving database efficiency by reducing thestress on database resources (e.g., CPU, RAM) andminimize open connections (and timeouts)
• Serverless, autoscaling, highly available (multi-AZ)
• Reduced RDS & Aurora failover time by up 66%
• Supports RDS (MySQL, PostgreSQL, MariaDB, MSSQL Server) and Aurora (MySQL, PostgreSQL)
• No code changes required for most apps
• Enforce IAM Authentication for DB, and securely store credentials in AWS Secrets Manager
• RDS Proxy is never publicly accessible (must be accessed from VPC)


RDS & Aurora Security
• At-rest encryption:
	• Database master & replicas encryption using AWS KMS – must be defined as launch time
	• If the master is not encrypted, the read replicas cannot be encrypted
	• To encrypt an un-encrypted database, go through a DB snapshot & restore as encrypted
• In-flight encryption: TLS-ready by default, use the AWS TLS root certificates client-side
• IAM Authentication: IAM roles to connect to your database (instead of username/pw)
• Security Groups: Control Network access to your RDS / Aurora DB
• No SSH available except on RDS Custom
• Audit Logs can be enabled and sent to CloudWatch Logs for longer retention

2. Amazon Aurora
-----------------------------------------------------------------
*** Like MySQL và PostgreSQL

• Aurora là một cơ sở dữ liệu quan hệ, nó tương thích với MySQL và PostgreSQL, và được phát triển bởi Amazon
- Hỗ trợ MySQL và PostgreSQL Database engines
- Nhanh hơn 5 lần so với MySQL và hơn 3 lần so với PostgreSQL
- Tự động tăng quy mô, cung cấp tính bền vững và tính sẵn sàng cao
- Quản lý bởi Amazon RDS

Amazon Aurora concept
• Aurora is a proprietary technology from AWS (not open sourced)
• Postgres and MySQL are both supported as Aurora DB (that means your drivers will work as if Aurora was a Postgres or MySQL database)
• Aurora is “AWS cloud optimized” and claims 5x performance improvement over MySQL on RDS, over 3x the performance of Postgres on RDS
• Aurora storage automatically grows in increments of 10GB, up to 128 TB.
• Aurora can have up to 15 replicas and the replication process is faster than MySQL (sub 10 ms replica lag)
• Failover in Aurora is instantaneous. It’s HA (High Availability) native.
• Aurora costs more than RDS (20% more) – but is more efficient

Aurora High Availability and Read Scaling
• 6 copies of your data across 3 AZ:
	• 4 copies out of 6 needed for writes
	• 3 copies out of 6 need for reads
	• Self healing with peer-to-peer replication
	• Storage is striped across 100s of volumes
• One Aurora Instance takes writes (master)
• Automated failover for master in less than 30 seconds
• Master + up to 15 Aurora Read Replicas serve reads
• Support for Cross Region Replication

Features of Aurora
• Automatic fail-over
• Backup and Recovery
• Isolation and security
• Industry compliance
• Push-button scaling
• Automated Patching with Zero Downtime
• Advanced Monitoring
• Routine Maintenance
• Backtrack: restore data at any point of time without using backups

Aurora Serverless
• Automated database instantiation and autoscaling based on actual usage
• Good for infrequent, intermittent or unpredictable workloads
• No capacity planning needed
• Pay per second, can be more cost-effective

Global Aurora
• Aurora Cross Region Read Replicas:
	• Useful for disaster recovery
	• Simple to put in place
• Aurora Global Database (recommended):
	• 1 Primary Region (read / write)
	• Up to 5 secondary (read-only) regions, replication lag is less than 1 second
	• Up to 16 Read Replicas per secondary region
	• Helps for decreasing latency
	• Promoting another region (for disaster recovery) has an RTO of < 1 minute
	• Typical cross-region replication takes less than 1 second

Aurora Machine Learning
• Enables you to add ML-based predictions to your applications via SQL
• Simple, optimized, and secure integration between Aurora and AWS ML services
• Supported services
	• Amazon SageMaker (use with any ML model)
	• Amazon Comprehend (for sentiment analysis)
• User don’t need to have ML experience
• Use cases: fraud detection, ads targeting, sentiment analysis, product recommendations


Aurora Database Cloning
• Create a new Aurora DB Cluster from an existing one
• Faster than snapshot & restore
• Uses copy-on-write protocol
• Initially, the new DB cluster uses the same data volume as the original DB cluster (fast and efficient – no copying is needed)
• When updates are made to the new DB cluster data, then additional storage is allocated and data is copied to be separated
• Very fast & cost-effective
• Useful to create a “staging” database from a “production” database without impacting the production database


Aurora Backups
• Automated backups
	• 1 to 35 days (cannot be disabled)
	• point-in-time recovery in that timeframe
• Manual DB Snapshots
	• Manually triggered by the user
	• Retention of backup for as long as you want

Aurora Restore options
• Restoring a RDS / Aurora backup or a snapshot creates a new database
• Restoring MySQL Aurora cluster from S3
	• Create a backup of your on-premises database using Percona XtraBackup
	• Store the backup file on Amazon S3
	• Restore the backup file onto a new Aurora cluster running MySQL


3. Amazon ElastiCache
-----------------------------------------------------------------
*** Include Redis and Memcached

ElastiCache là một dịch vụ được quản lý hoàn toàn lưu trữ dữ liệu tạm thời trên RAM, ElastiCache tương thích với Redis và Memcached.
- Lưu trữ dữ liệu trong RAM
- Dữ liệu có thể bị mất
- Tương thích với Redis và Memcached.
- Có tốc độ truy xuất dữ liệu rất cao (High Performance và độ trễ cực thấp (low Latency)

Amazon ElastiCache Overview
• The same way RDS is to get managed Relational Databases…
• ElastiCache is to get managed Redis or Memcached
• Caches are in-memory databases with really high performance, low latency
• Helps reduce load off of databases for read intensive workloads
• Helps make your application stateless
• AWS takes care of OS maintenance / patching, optimizations, setup, configuration, monitoring, failure recovery and backups
• Using ElastiCache involves heavy application code changes

ElastiCache Solution Architecture - DB Cache
• Applications queries ElastiCache, if not available, get from RDS and store in ElastiCache.
• Helps relieve load in RDS
• Cache must have an invalidation strategy to make sure only the most current data is used in there.

ElastiCache Solution Architecture – User Session Store
• User logs into any of the application
• The application writes the session data into ElastiCache
• The user hits another instance of our application
• The instance retrieves the data and the user is already logged in

ElastiCache – Redis
• Multi AZ with Auto-Failover
• Read Replicas to scale reads and have high availability
• Data Durability using AOF persistence
• Backup and restore features
• Supports Sets and Sorted Sets
• Use Case
	• Gaming Leaderboards are computationally complex
	• Redis Sorted sets guarantee both uniqueness and element ordering
	• Each time a new element added, it’s ranked in real time, then added in correct order

ElastiCache – MEMCACHED
• Multi-node for partitioning of data (sharding)
• No high availability (replication)
• Non persistent
• No backup and restore
• Multi-threaded architecture
• Use case:
	• Cần một giải pháp caching đơn giản, với hiệu suất cao và không yêu cầu các tính năng như sao lưu hoặc lưu trữ lâu dài.
	• Muốn sử dụng một hệ thống phân tán đơn giản mà có thể dễ dàng mở rộng.

ElastiCache – Cache Security
• ElastiCache supports IAM Authentication for Redis
• IAM policies on ElastiCache are only used for AWS API-level security
• Redis AUTH
	• You can set a “password/token” when you create a Redis cluster
	• This is an extra level of security for your cache (on top of security groups)
	• Support SSL in flight encryption
• Memcached
	• Supports SASL-based authentication (advanced)

Patterns for ElastiCache
• Lazy Loading: all the read data is cached, data can become stale in cache
• Write Through: Adds or update data in the cache when written to a DB (no stale data)
• Session Store: store temporary session data in a cache (using TTL features)
• Quote: There are only two hard things in Computer Science: cache invalidation and naming things


4. Amazon DynamoDB
-----------------------------------------------------------------
DynamoDB là một cơ sở dữ liệu NoSQL khóa-giá trị được quản lý hoàn toàn, phi máy chủ và được thiết kế để chạy các ứng dụng hiệu suất cao trên mọi quy mô.
- NoSQL khóa-giá trị(key-value) CSDL
- Được quản lý hoàn toàn và phi máy chủ (serverless)
- Không sử dụng quan hệ CSDL (Non-relational)
- Tự động mở rộng quy mô xử lý dữ liệu, khi gặp phải tải trọng công việc lớn, đòi Hỏi CSDL phải có hiệu xuất cao


5. Amazon DocumentDB
-----------------------------------------------------------------
*** Like MongoDB

DocumentDB là dịch vụ cơ sở dữ liệu có thể mở rộng, có độ bền cao và được quản lý đầy đủ để vận hành những khối lượng công việc, giống với MongoDB
- Là cơ sở dữ liệu tài liệu (Document database)
- Được quản lý hoàn toàn và phí máy chủ (serverless)
- Không sử dụng quan hệ CSDL (Non-relational)


6. Amazon Nepture
-----------------------------------------------------------------
Nepture là một dịch vụ được quản lý hoàn toàn lưu trữ dữ liệu đồ thị (Graph database), nó hỗ trợ kết nối bộ dừ liệu cao
- lưu trữ dữ liệu đồ thị (Graph database)
- Được quản lý hoàn toàn và phi máy chủ (serverless)
- Nó hỗ trợ bộ kết nối cao giống như mạng xã hội (social media networks)
- Có tốc độ truy xuất dữ liệu nhanh và đáng tin cậy



II. AWS Migration Service
----------------------------------------------------------------------------------------------------------------------------------------
1. Database Migration Service(DMS)
-----------------------------------------------------------------
DMS giúp bạn di chuyển các cơ sở dữ liệu (databases) lên AWS
- Di chuyển các cơ sở dữ liệu onpremis lên AWS
- Dữ liệu liên tục được sao chép đồng bộ
- Hỗ trợ di chuyển các loại cơ sở dữ liệu đồng nhất và không đồng nhất
- Hầu như không có thời gian chết (no downtime)

Example:
- Di chuyển Oracle database onpremis lên AWS Aurora MySQL
- Di chuyển Oracle database onpremis lên Oracle chạy bên trong EC2 Instance


2. DATASync
-----------------------------------------------------------------
DataSync cho phép truyền dữ liệu online tại chỗ lên các dịch vụ lưu trữ AWS S3 hoặc EFS
- Di chuyển dữ liệu tại chỗ lên AWS
- Copy dữ liệu với nhau giữa các dịch vụ lưu trữ của AWS
- Copy dữ liệu qua kết nối Direct Connect với AWS cloud hoặc qua internet
- Nhân bản dữ liệu (Replicate) giữa các Region hoặc giữa các Account


